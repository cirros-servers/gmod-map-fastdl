import { writeFile, readFile, readdir, mkdir, exists } from "node:fs/promises";
import { glob } from "glob";

const maps = await glob("*.txt", { cwd: Bun.env.GARRYSMOD + "/addonmap", absolute: true });
const filetypes = ["vmt", "vtf", "mdl", "vvd", "ani", "vtx", "phy", "png", "jpg", "jpeg", "wav", "ogg", "mp3"];

let files: Set<string> = new Set();
let mapsaddons: Map<string, Set<string>> = new Map();
let otheraddons: Set<string> = new Set();
for await (const map of maps) {
    const file = await readFile(map, { encoding: "utf-8" });
    for (const line of file.split("\n")) {
        files.add(line);
    }

    if (file.includes(".bsp")) {
        const mapname = file.match(/maps\/([\w_-]+).bsp/g) as String[];
        if (!mapname?.[0]) {
            console.log("Couldn't process addonmap", map);
            continue;
        }
        const mapset: Set<string> = new Set();
        for (const line of file.split("\n")) {
            mapset.add(line);
        }

        mapsaddons.set(mapname[0].replace("maps/", "").replace(".bsp", ""), mapset);
    } else {
        for (const line of file.split("\n")) {
            otheraddons.add(line);
        }
    }
}

for (const file of files) {
    const fileExt = file.split(".").pop();
    if (!fileExt) {
        console.log("File has no extension?", file);
        process.exit();
    }
    if (!["bsp", "nav", "ain", ...filetypes].includes(fileExt)) continue;

    if (!(await exists(`${Bun.env.GARRYSMOD}/${file}.bz2`))) {
        console.log("Compressing:", file);
        Bun.spawnSync(["bzip2", "-k", `${Bun.env.GARRYSMOD}/${file}`]);
    } else {
        console.log("Exists:", file + ".bz2");
    }
}

let script = `-- Autogenerated by cirro's addon scripts
-- Any changes made to this file will NOT be persisted

if (SERVER) then
`;
for (const file of otheraddons) {
    const fileExt = file.split(".").pop();
    if (!fileExt) {
        console.log("File has no extension?", file);
        process.exit();
    }
    if (!filetypes.includes(fileExt)) continue;

    script += `    resource.AddSingleFile("${file}")\n`;
}

for (const mapname of mapsaddons.keys()) {
    script += `    if game.GetMap() == "${mapname}" then\n`;
    const mapfiles = mapsaddons.get(mapname);
    if (!mapfiles) throw new Error("map does nt have files lawl");
    for (const file of mapfiles) {
        const fileExt = file.split(".").pop();
        if (!fileExt) {
            console.log("File has no extension?", file);
            process.exit();
        }
        if (!filetypes.includes(fileExt)) continue;

        script += `        resource.AddSingleFile("${file}")\n`;
    }
    script += `    end\n`;
}
script += "end";

try {
    await readdir(`${Bun.env.GARRYSMOD}/lua/autorun/server`);
} catch (err) {
    await mkdir(`${Bun.env.GARRYSMOD}/lua/autorun/server`, { recursive: true });
}
await writeFile(`${Bun.env.GARRYSMOD}/lua/autorun/server/fastdl.lua`, script);
console.log("Written: lua/autorun/server/fastdl.lua");
